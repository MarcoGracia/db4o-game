package es.mgj.base;

// Generated 07-feb-2014 21:16:06 by Hibernate Tools 4.0.0

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;



/**
 * Summoning generated by hbm2java
 */

public class Summoning extends Tabla implements java.io.Serializable {

	private String id;
	private String name;
	private Integer power;
	private String effect;
	private Float summonFrecuency;
	private Set<Character> characters;

	public Summoning() {
	}

	public Summoning(String id) {
		this.id = id;
	}

	public Summoning(String id, String name, Integer power, String effect,
			Float summonFrecuency, Set<Character> characters) {
		this.id = id;
		this.name = name;
		this.power = power;
		this.effect = effect;
		this.summonFrecuency = summonFrecuency;
		this.characters = characters;
	}

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Integer getPower() {
		return this.power;
	}

	public void setPower(Integer power) {
		this.power = power;
	}

	public String getEffect() {
		return this.effect;
	}

	public void setEffect(String effect) {
		this.effect = effect;
	}

	public Float getSummonFrecuency() {
		return this.summonFrecuency;
	}

	public void setSummonFrecuency(Float summonFrecuency) {
		this.summonFrecuency = summonFrecuency;
	}

	
	public Set<Character> getCharacters() {
		if(this.characters == null)
			characters = new HashSet<Character>(0);
		return this.characters;
	}

	public void setCharacters(Set<Character> characters) {
		this.characters = characters;
	}
	
	@Override
	public List<String> getCampos(){
		
		List<String> fields = new ArrayList<String>();
		
		for(Field nombre : Summoning.class.getDeclaredFields())
			fields.add(nombre.toString().substring(nombre.toString().lastIndexOf(".") + 1));
		
		return fields;
		
	}
	
	public String getCharactersList(){
		
		if(this.getCharacters().size() == 0)
			return "Not pleased";
		
		String characters = "";
		
		for(Character c : this.getCharacters()){
			characters += c.getName() + ",";
		}
		
		return characters.substring(0, characters.length()-1);
	}
	
	@Override
	public String toString(){
		return this.name;
	}

}
