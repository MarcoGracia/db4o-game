package es.mgj.base;

// Generated 07-feb-2014 21:16:06 by Hibernate Tools 4.0.0

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import es.mgj.util.Util;


/**
 * Magic generated by hbm2java
 */

public class Magic extends Tabla implements java.io.Serializable {

	private String id;
	private String name;
	private Float damage;
	private String element;
	private Float requiredMana;
	private Set<Character> characters;

	public Magic() {
	}

	public Magic(String id) {
		this.id = id;
	}

	public Magic(String id, String name, Float damage, String element,
			Float requiredMana, Set<Character> characters) {
		this.id = id;
		this.name = name;
		this.damage = damage;
		this.element = element;
		this.requiredMana = requiredMana;
		this.characters = characters;
	}


	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}


	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}


	public Float getDamage() {
		return this.damage;
	}

	public void setDamage(Float damage) {
		this.damage = damage;
	}


	public String getElement() {
		return this.element;
	}

	public void setElement(String element) {
		this.element = element;
	}


	public Float getRequiredMana() {
		return this.requiredMana;
	}

	public void setRequiredMana(Float requiredMana) {
		this.requiredMana = requiredMana;
	}

	
	public Set<Character> getCharacters() {
		if(this.characters == null)
			characters = new HashSet<Character>(0);
		
		return this.characters;
	}

	public void setCharacters(Set<Character> characters) {
		this.characters = characters;
	}

	@Override
	public List<String> getCampos(){
		
		List<String> fields = new ArrayList<String>();
		
		for(Field nombre : Magic.class.getDeclaredFields())
			fields.add(nombre.toString().substring(nombre.toString().lastIndexOf(".") + 1));
		
		return fields;
		
	}
	

	public String getCharactersList(){
		
		
		if(this.getCharacters().size() == 0)
			return "Not learnt";
		
		String characters = "";
		
		for(Character c : this.getCharacters()){
			characters += c.getName() + ",";
		}
		
		return characters.substring(0, characters.length()-1);
	}

	@Override
	public String toString(){
		return this.name;
	}
}
